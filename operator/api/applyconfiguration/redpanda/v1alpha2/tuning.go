// Copyright 2024 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

import (
	v1 "k8s.io/api/core/v1"
)

// TuningApplyConfiguration represents an declarative configuration of the Tuning type for use
// with apply.
type TuningApplyConfiguration struct {
	ExtraVolumeMounts *string                  `json:"extraVolumeMounts,omitempty"`
	Resources         *v1.ResourceRequirements `json:"resources,omitempty"`
	BallastFilePath   *string                  `json:"ballast_file_path,omitempty"`
	BallastFileSize   *string                  `json:"ballast_file_size,omitempty"`
	TuneAioEvents     *bool                    `json:"tune_aio_events,omitempty"`
	TuneBallastFile   *bool                    `json:"tune_ballast_file,omitempty"`
	TuneClockSource   *bool                    `json:"tune_clocksource,omitempty"`
	WellKnownIo       *string                  `json:"well_known_io,omitempty"`
}

// TuningApplyConfiguration constructs an declarative configuration of the Tuning type for use with
// apply.
func Tuning() *TuningApplyConfiguration {
	return &TuningApplyConfiguration{}
}

// WithExtraVolumeMounts sets the ExtraVolumeMounts field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ExtraVolumeMounts field is set to the value of the last call.
func (b *TuningApplyConfiguration) WithExtraVolumeMounts(value string) *TuningApplyConfiguration {
	b.ExtraVolumeMounts = &value
	return b
}

// WithResources sets the Resources field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Resources field is set to the value of the last call.
func (b *TuningApplyConfiguration) WithResources(value v1.ResourceRequirements) *TuningApplyConfiguration {
	b.Resources = &value
	return b
}

// WithBallastFilePath sets the BallastFilePath field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BallastFilePath field is set to the value of the last call.
func (b *TuningApplyConfiguration) WithBallastFilePath(value string) *TuningApplyConfiguration {
	b.BallastFilePath = &value
	return b
}

// WithBallastFileSize sets the BallastFileSize field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BallastFileSize field is set to the value of the last call.
func (b *TuningApplyConfiguration) WithBallastFileSize(value string) *TuningApplyConfiguration {
	b.BallastFileSize = &value
	return b
}

// WithTuneAioEvents sets the TuneAioEvents field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TuneAioEvents field is set to the value of the last call.
func (b *TuningApplyConfiguration) WithTuneAioEvents(value bool) *TuningApplyConfiguration {
	b.TuneAioEvents = &value
	return b
}

// WithTuneBallastFile sets the TuneBallastFile field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TuneBallastFile field is set to the value of the last call.
func (b *TuningApplyConfiguration) WithTuneBallastFile(value bool) *TuningApplyConfiguration {
	b.TuneBallastFile = &value
	return b
}

// WithTuneClockSource sets the TuneClockSource field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TuneClockSource field is set to the value of the last call.
func (b *TuningApplyConfiguration) WithTuneClockSource(value bool) *TuningApplyConfiguration {
	b.TuneClockSource = &value
	return b
}

// WithWellKnownIo sets the WellKnownIo field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the WellKnownIo field is set to the value of the last call.
func (b *TuningApplyConfiguration) WithWellKnownIo(value string) *TuningApplyConfiguration {
	b.WellKnownIo = &value
	return b
}
