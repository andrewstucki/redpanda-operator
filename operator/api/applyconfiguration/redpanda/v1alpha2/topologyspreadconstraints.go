// Copyright 2024 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

// TopologySpreadConstraintsApplyConfiguration represents an declarative configuration of the TopologySpreadConstraints type for use
// with apply.
type TopologySpreadConstraintsApplyConfiguration struct {
	MaxSkew           *int    `json:"maxSkew,omitempty"`
	TopologyKey       *string `json:"topologyKey,omitempty"`
	WhenUnsatisfiable *string `json:"whenUnsatisfiable,omitempty"`
}

// TopologySpreadConstraintsApplyConfiguration constructs an declarative configuration of the TopologySpreadConstraints type for use with
// apply.
func TopologySpreadConstraints() *TopologySpreadConstraintsApplyConfiguration {
	return &TopologySpreadConstraintsApplyConfiguration{}
}

// WithMaxSkew sets the MaxSkew field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MaxSkew field is set to the value of the last call.
func (b *TopologySpreadConstraintsApplyConfiguration) WithMaxSkew(value int) *TopologySpreadConstraintsApplyConfiguration {
	b.MaxSkew = &value
	return b
}

// WithTopologyKey sets the TopologyKey field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TopologyKey field is set to the value of the last call.
func (b *TopologySpreadConstraintsApplyConfiguration) WithTopologyKey(value string) *TopologySpreadConstraintsApplyConfiguration {
	b.TopologyKey = &value
	return b
}

// WithWhenUnsatisfiable sets the WhenUnsatisfiable field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the WhenUnsatisfiable field is set to the value of the last call.
func (b *TopologySpreadConstraintsApplyConfiguration) WithWhenUnsatisfiable(value string) *TopologySpreadConstraintsApplyConfiguration {
	b.WhenUnsatisfiable = &value
	return b
}
