// Copyright 2024 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

// LicenseSecretRefApplyConfiguration represents an declarative configuration of the LicenseSecretRef type for use
// with apply.
type LicenseSecretRefApplyConfiguration struct {
	SecretKey  *string `json:"secret_key,omitempty"`
	SecretName *string `json:"secret_name,omitempty"`
}

// LicenseSecretRefApplyConfiguration constructs an declarative configuration of the LicenseSecretRef type for use with
// apply.
func LicenseSecretRef() *LicenseSecretRefApplyConfiguration {
	return &LicenseSecretRefApplyConfiguration{}
}

// WithSecretKey sets the SecretKey field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SecretKey field is set to the value of the last call.
func (b *LicenseSecretRefApplyConfiguration) WithSecretKey(value string) *LicenseSecretRefApplyConfiguration {
	b.SecretKey = &value
	return b
}

// WithSecretName sets the SecretName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SecretName field is set to the value of the last call.
func (b *LicenseSecretRefApplyConfiguration) WithSecretName(value string) *LicenseSecretRefApplyConfiguration {
	b.SecretName = &value
	return b
}
