// Copyright 2024 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

import (
	v1 "k8s.io/api/core/v1"
)

// SideCarObjApplyConfiguration represents an declarative configuration of the SideCarObj type for use
// with apply.
type SideCarObjApplyConfiguration struct {
	Enabled         *bool                    `json:"enabled,omitempty"`
	Resources       *v1.ResourceRequirements `json:"resources,omitempty"`
	SecurityContext *v1.SecurityContext      `json:"securityContext,omitempty"`
}

// SideCarObjApplyConfiguration constructs an declarative configuration of the SideCarObj type for use with
// apply.
func SideCarObj() *SideCarObjApplyConfiguration {
	return &SideCarObjApplyConfiguration{}
}

// WithEnabled sets the Enabled field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Enabled field is set to the value of the last call.
func (b *SideCarObjApplyConfiguration) WithEnabled(value bool) *SideCarObjApplyConfiguration {
	b.Enabled = &value
	return b
}

// WithResources sets the Resources field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Resources field is set to the value of the last call.
func (b *SideCarObjApplyConfiguration) WithResources(value v1.ResourceRequirements) *SideCarObjApplyConfiguration {
	b.Resources = &value
	return b
}

// WithSecurityContext sets the SecurityContext field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SecurityContext field is set to the value of the last call.
func (b *SideCarObjApplyConfiguration) WithSecurityContext(value v1.SecurityContext) *SideCarObjApplyConfiguration {
	b.SecurityContext = &value
	return b
}
