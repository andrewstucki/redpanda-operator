// Copyright 2024 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

// StorageApplyConfiguration represents an declarative configuration of the Storage type for use
// with apply.
type StorageApplyConfiguration struct {
	HostPath         *string                             `json:"hostPath,omitempty"`
	PersistentVolume *PersistentVolumeApplyConfiguration `json:"persistentVolume,omitempty"`
	Tiered           *TieredApplyConfiguration           `json:"tiered,omitempty"`
}

// StorageApplyConfiguration constructs an declarative configuration of the Storage type for use with
// apply.
func Storage() *StorageApplyConfiguration {
	return &StorageApplyConfiguration{}
}

// WithHostPath sets the HostPath field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HostPath field is set to the value of the last call.
func (b *StorageApplyConfiguration) WithHostPath(value string) *StorageApplyConfiguration {
	b.HostPath = &value
	return b
}

// WithPersistentVolume sets the PersistentVolume field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PersistentVolume field is set to the value of the last call.
func (b *StorageApplyConfiguration) WithPersistentVolume(value *PersistentVolumeApplyConfiguration) *StorageApplyConfiguration {
	b.PersistentVolume = value
	return b
}

// WithTiered sets the Tiered field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Tiered field is set to the value of the last call.
func (b *StorageApplyConfiguration) WithTiered(value *TieredApplyConfiguration) *StorageApplyConfiguration {
	b.Tiered = value
	return b
}
