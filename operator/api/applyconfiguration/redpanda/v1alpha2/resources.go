// Copyright 2024 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

// ResourcesApplyConfiguration represents an declarative configuration of the Resources type for use
// with apply.
type ResourcesApplyConfiguration struct {
	CPU    *CPUApplyConfiguration    `json:"cpu,omitempty"`
	Memory *MemoryApplyConfiguration `json:"memory,omitempty"`
}

// ResourcesApplyConfiguration constructs an declarative configuration of the Resources type for use with
// apply.
func Resources() *ResourcesApplyConfiguration {
	return &ResourcesApplyConfiguration{}
}

// WithCPU sets the CPU field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CPU field is set to the value of the last call.
func (b *ResourcesApplyConfiguration) WithCPU(value *CPUApplyConfiguration) *ResourcesApplyConfiguration {
	b.CPU = value
	return b
}

// WithMemory sets the Memory field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Memory field is set to the value of the last call.
func (b *ResourcesApplyConfiguration) WithMemory(value *MemoryApplyConfiguration) *ResourcesApplyConfiguration {
	b.Memory = value
	return b
}
