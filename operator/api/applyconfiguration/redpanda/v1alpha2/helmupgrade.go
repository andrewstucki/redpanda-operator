// Copyright 2024 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

import (
	v2beta2 "github.com/fluxcd/helm-controller/api/v2beta2"
)

// HelmUpgradeApplyConfiguration represents an declarative configuration of the HelmUpgrade type for use
// with apply.
type HelmUpgradeApplyConfiguration struct {
	Remediation    *v2beta2.UpgradeRemediation `json:"remediation,omitempty"`
	Force          *bool                       `json:"force,omitempty"`
	PreserveValues *bool                       `json:"preserveValues,omitempty"`
	CleanupOnFail  *bool                       `json:"cleanupOnFail,omitempty"`
}

// HelmUpgradeApplyConfiguration constructs an declarative configuration of the HelmUpgrade type for use with
// apply.
func HelmUpgrade() *HelmUpgradeApplyConfiguration {
	return &HelmUpgradeApplyConfiguration{}
}

// WithRemediation sets the Remediation field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Remediation field is set to the value of the last call.
func (b *HelmUpgradeApplyConfiguration) WithRemediation(value v2beta2.UpgradeRemediation) *HelmUpgradeApplyConfiguration {
	b.Remediation = &value
	return b
}

// WithForce sets the Force field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Force field is set to the value of the last call.
func (b *HelmUpgradeApplyConfiguration) WithForce(value bool) *HelmUpgradeApplyConfiguration {
	b.Force = &value
	return b
}

// WithPreserveValues sets the PreserveValues field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PreserveValues field is set to the value of the last call.
func (b *HelmUpgradeApplyConfiguration) WithPreserveValues(value bool) *HelmUpgradeApplyConfiguration {
	b.PreserveValues = &value
	return b
}

// WithCleanupOnFail sets the CleanupOnFail field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CleanupOnFail field is set to the value of the last call.
func (b *HelmUpgradeApplyConfiguration) WithCleanupOnFail(value bool) *HelmUpgradeApplyConfiguration {
	b.CleanupOnFail = &value
	return b
}
