// Copyright 2024 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

// TieredApplyConfiguration represents an declarative configuration of the Tiered type for use
// with apply.
type TieredApplyConfiguration struct {
	MountType            *string                                `json:"mountType,omitempty"`
	HostPath             *string                                `json:"hostPath,omitempty"`
	PersistentVolume     *PersistentVolumeApplyConfiguration    `json:"persistentVolume,omitempty"`
	Config               *TieredConfigApplyConfiguration        `json:"config,omitempty"`
	CredentialsSecretRef *CredentialSecretRefApplyConfiguration `json:"credentialsSecretRef,omitempty"`
}

// TieredApplyConfiguration constructs an declarative configuration of the Tiered type for use with
// apply.
func Tiered() *TieredApplyConfiguration {
	return &TieredApplyConfiguration{}
}

// WithMountType sets the MountType field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MountType field is set to the value of the last call.
func (b *TieredApplyConfiguration) WithMountType(value string) *TieredApplyConfiguration {
	b.MountType = &value
	return b
}

// WithHostPath sets the HostPath field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HostPath field is set to the value of the last call.
func (b *TieredApplyConfiguration) WithHostPath(value string) *TieredApplyConfiguration {
	b.HostPath = &value
	return b
}

// WithPersistentVolume sets the PersistentVolume field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PersistentVolume field is set to the value of the last call.
func (b *TieredApplyConfiguration) WithPersistentVolume(value *PersistentVolumeApplyConfiguration) *TieredApplyConfiguration {
	b.PersistentVolume = value
	return b
}

// WithConfig sets the Config field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Config field is set to the value of the last call.
func (b *TieredApplyConfiguration) WithConfig(value *TieredConfigApplyConfiguration) *TieredApplyConfiguration {
	b.Config = value
	return b
}

// WithCredentialsSecretRef sets the CredentialsSecretRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CredentialsSecretRef field is set to the value of the last call.
func (b *TieredApplyConfiguration) WithCredentialsSecretRef(value *CredentialSecretRefApplyConfiguration) *TieredApplyConfiguration {
	b.CredentialsSecretRef = value
	return b
}
