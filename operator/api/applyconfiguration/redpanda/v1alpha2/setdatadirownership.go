// Copyright 2024 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

import (
	v1 "k8s.io/api/core/v1"
)

// SetDataDirOwnershipApplyConfiguration represents an declarative configuration of the SetDataDirOwnership type for use
// with apply.
type SetDataDirOwnershipApplyConfiguration struct {
	Enabled           *bool                    `json:"enabled,omitempty"`
	ExtraVolumeMounts *string                  `json:"extraVolumeMounts,omitempty"`
	Resources         *v1.ResourceRequirements `json:"resources,omitempty"`
}

// SetDataDirOwnershipApplyConfiguration constructs an declarative configuration of the SetDataDirOwnership type for use with
// apply.
func SetDataDirOwnership() *SetDataDirOwnershipApplyConfiguration {
	return &SetDataDirOwnershipApplyConfiguration{}
}

// WithEnabled sets the Enabled field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Enabled field is set to the value of the last call.
func (b *SetDataDirOwnershipApplyConfiguration) WithEnabled(value bool) *SetDataDirOwnershipApplyConfiguration {
	b.Enabled = &value
	return b
}

// WithExtraVolumeMounts sets the ExtraVolumeMounts field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ExtraVolumeMounts field is set to the value of the last call.
func (b *SetDataDirOwnershipApplyConfiguration) WithExtraVolumeMounts(value string) *SetDataDirOwnershipApplyConfiguration {
	b.ExtraVolumeMounts = &value
	return b
}

// WithResources sets the Resources field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Resources field is set to the value of the last call.
func (b *SetDataDirOwnershipApplyConfiguration) WithResources(value v1.ResourceRequirements) *SetDataDirOwnershipApplyConfiguration {
	b.Resources = &value
	return b
}
