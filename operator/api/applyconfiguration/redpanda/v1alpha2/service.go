// Copyright 2024 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

// ServiceApplyConfiguration represents an declarative configuration of the Service type for use
// with apply.
type ServiceApplyConfiguration struct {
	Name     *string                            `json:"name,omitempty"`
	Internal *ServiceInternalApplyConfiguration `json:"internal,omitempty"`
}

// ServiceApplyConfiguration constructs an declarative configuration of the Service type for use with
// apply.
func Service() *ServiceApplyConfiguration {
	return &ServiceApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ServiceApplyConfiguration) WithName(value string) *ServiceApplyConfiguration {
	b.Name = &value
	return b
}

// WithInternal sets the Internal field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Internal field is set to the value of the last call.
func (b *ServiceApplyConfiguration) WithInternal(value *ServiceInternalApplyConfiguration) *ServiceApplyConfiguration {
	b.Internal = value
	return b
}
