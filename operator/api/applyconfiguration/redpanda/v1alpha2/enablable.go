// Copyright 2024 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

// EnablableApplyConfiguration represents an declarative configuration of the Enablable type for use
// with apply.
type EnablableApplyConfiguration struct {
	Enabled *bool `json:"enabled,omitempty"`
}

// EnablableApplyConfiguration constructs an declarative configuration of the Enablable type for use with
// apply.
func Enablable() *EnablableApplyConfiguration {
	return &EnablableApplyConfiguration{}
}

// WithEnabled sets the Enabled field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Enabled field is set to the value of the last call.
func (b *EnablableApplyConfiguration) WithEnabled(value bool) *EnablableApplyConfiguration {
	b.Enabled = &value
	return b
}
